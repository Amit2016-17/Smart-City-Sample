
{{- if (len $.Values.connector.cloud) }}
{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeName := printf "%s-office%d" $scenarioName (add $officeIdx 1) }}
{{- if contains $.Values.buildScope $officeName }}

apiVersion: v1
kind: Service
metadata:
  name: defn(`OFFICE_NAME')-tunnel-service
  labels:
    app: defn(`OFFICE_NAME')-tunnel
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: storage
  - port: 9200
    protocol: TCP
    name: db
  selector:
    app: defn(`OFFICE_NAME')-tunnel

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: defn(`OFFICE_NAME')-tunnel
  labels:
     app: defn(`OFFICE_NAME')-tunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: defn(`OFFICE_NAME')-tunnel
  template:
    metadata:
      labels:
        app: defn(`OFFICE_NAME')-tunnel
    spec:
      enableServiceLinks: false
      containers:
        - name: {{ $officeName }}-tunnel
          image: smtc_ssl_tunnel:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
            - containerPort: 9200
          env:
{{- $officeIdx2 := add (mul $officeIdx (len $.Values.scenarios)) $scenarioIdx }}
            - name: REVERSE_TUNNEL1
              value: "{{ $.Values.connector.cloud }}:{{ add 30300 $officeIdx2 }} {{ $officeName }}-db-service:9300"
            - name: REVERSE_TUNNEL2
              value: "{{ $.Values.connector.cloud }}:{{ add 8080 $officeIdx2 }} {{ $officeName }}-storage-service.default.svc.cluster.local:8080"
            - name: FORWARD_TUNNEL1
              value: "{{ $officeName }}-tunnel:8080 {{ $.Values.connector.cloud }}:8080"
            - name: FORWARD_TUNNEL2
              value: "{{ $officeName }}-tunnel:9200 {{ $.Values.connector.cloud }}:9200"
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /mnt
              name: tunnel-secret
              readOnly: true
      volumes:
          - name: tunnel-secret
            secret:
                secretName: tunnel-secret
                defaultMode: 256
      {{ include "smtc.platform.node-selector" $ }}

{{- end }}

---

{{- end }}
{{- end }}
{{- end }}
