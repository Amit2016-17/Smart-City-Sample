
{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeName := printf "%s-office%d" $scenarioName $officeIdx }}

{{- if eq $scenarioName "traffic" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $officeName }}-analytics-traffic
  labels:
    app: {{ $officeName }}-analytics-traffic
spec:
  replicas: {{ include "smtc.nanalytics" $ }}
  selector:
    matchLabels:
      app: {{ $officeName }}-analytics-traffic
  template:
    metadata:
      labels:
        app: {{ $officeName }}-analytics-traffic
    spec:
      enableServiceLinks: false
      {{- if $.Values.discoverIPCamera }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ $officeName }}-analytics-traffic
          image: smtc_analytics_object_{{ include "smtc.platform.suffix" $ }}_{{ $.Values.framework }}:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OFFICE
              {{- $args := dict "scenarioName" $scenarioName "Values" $.Values "officeIdx" $officeIdx }}
              {{- include "smtc.env.office" $args }}
            - name: DBHOST
              {{- $args := dict "officeName" $officeName "Values" $.Values }}
              {{- include "smtc.env.dbhost" $args }}
            - name: MQTTHOST
              value: "{{ $officeName }}-mqtt-service"
            - name: STHOST
              value: "http://{{ $officeName }}-storage-service:8080/api/upload"
            - name: EVERY_NTH_FRAME
              value: "6"
            - name: SCENARIO
              value: {{ $scenarioName | quote }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
            {{- include "smtc.platform.mounts" $ }}
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
          {{- include "smtc.platform.volumes" $ }}
      {{ include "smtc.platform.node-selector" $ }}
{{- else if eq $.Values.scenario "stadium" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-entrance
  labels:
     app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-entrance
spec:
  replicas: {{ include "smtc.analytics" $ }}
  selector:
    matchLabels:
      app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-entrance
  template:
    metadata:
      labels:
        app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-entrance
    spec:
      enableServiceLinks: false
      {{- if $.Values.discoverIPCamera }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-entrance
          image: smtc_analytics_entrance_{{ include "smtc.platform.suffix" $ }}_{{ $.Values.framework }}:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OFFICE
              {{- if eq $.Values.scenario "traffic" }}
              value: {{ index $.Values.officeLocations.traffic $officeIdx | quote }}
              {{- else if eq $.Values.scenario "stadium" }}
              value: {{ index $.Values.officeLocations.stadium $officeIdx | quote }}
              {{- end }}
            - name: DBHOST
              {{- if gt (int $.Values.nOffices) 1 }}
              value: {{ ( printf "%s-office%d" $.Values.scenario $officeIdx ) | printf "http://%s-db-service:9200" | quote }}
              {{- else }}
              value: "http://db-service:9200"
              {{- end }}
            - name: MQTTHOST
              value: "{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-mqtt-service"
            - name: STHOST
              value: "http://{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-storage-service:8080/api/upload"
            - name: EVERY_NTH_FRAME
              value: "6"
            - name: SCENARIO
              value: {{ $.Values.scenario | quote }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
            {{- include "smtc.platform.mounts" $ }}
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
          {{- include "smtc.platform.volumes" $ }}
      {{ include "smtc.platform.node-selector" $ }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-crowd
  labels:
     app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-crowd
spec:
  replicas: {{ include "smtc.analytics2" $ }}
  selector:
    matchLabels:
      app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-crowd
  template:
    metadata:
      labels:
        app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-crowd
    spec:
      enableServiceLinks: false
      {{- if $.Values.discoverIPCamera }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-crowd
          image: smtc_analytics_crowd_{{ include "smtc.platform.suffix" $ }}_{{ $.Values.framework }}:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OFFICE
              {{- if eq $.Values.scenario "traffic" }}
              value: {{ index $.Values.officeLocations.traffic $officeIdx | quote }}
              {{- else if eq $.Values.scenario "stadium" }}
              value: {{ index $.Values.officeLocations.stadium $officeIdx | quote }}
              {{- end }}
            - name: DBHOST
              {{- if gt (int $.Values.nOffices) 1 }}
              value: {{ ( printf "%s-office%d" $.Values.scenario $officeIdx ) | printf "http://%s-db-service:9200" | quote }}
              {{- else }}
              value: "http://db-service:9200"
              {{- end }}
            - name: MQTTHOST
              value: "{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-mqtt-service"
            - name: STHOST
              value: "http://{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-storage-service:8080/api/upload"
            - name: EVERY_NTH_FRAME
              value: "30"
            - name: SCENARIO
              value: {{ $.Values.scenario | quote }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
            {{- include "smtc.platform.mounts" $ }}
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
          {{- include "smtc.platform.volumes" $ }}
      {{ include "smtc.platform.node-selector" $ }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-svcq
  labels:
     app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-svcq
spec:
  replicas: {{ include "smtc.analytics3" $ }}
  selector:
    matchLabels:
      app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-svcq
  template:
    metadata:
      labels:
        app: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-svcq
    spec:
      enableServiceLinks: false
      {{- if $.Values.discoverIPCamera }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ printf "%s-office%d" $.Values.scenario $officeIdx }}-analytics-svcq
          image: smtc_analytics_object_{{ include "smtc.platform.suffix" $ }}_{{ $.Values.framework }}:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OFFICE
              {{- if eq $.Values.scenario "traffic" }}
              value: {{ index $.Values.officeLocations.traffic $officeIdx | quote }}
              {{- else if eq $.Values.scenario "stadium" }}
              value: {{ index $.Values.officeLocations.stadium $officeIdx | quote }}
              {{- end }}
            - name: DBHOST
              {{- if gt (int $.Values.nOffices) 1 }}
              value: {{ ( printf "%s-office%d" $.Values.scenario $officeIdx ) | printf "http://%s-db-service:9200" | quote }}
              {{- else }}
              value: "http://db-service:9200"
              {{- end }}
            - name: MQTTHOST
              value: "{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-mqtt-service"
            - name: STHOST
              value: "http://{{ printf "%s-office%d" $.Values.scenario $officeIdx }}-storage-service:8080/api/upload"
            - name: EVERY_NTH_FRAME
              value: "6"
            - name: SCENARIO
              value: {{ $.Values.scenario | quote }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
            {{- include "smtc.platform.mounts" $ }}
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
          {{- include "smtc.platform.volumes" $ }}
      {{ include "smtc.platform.node-selector" $ }}
{{- end }}
---
{{- end }}
{{- end }}
