
{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeName := printf "%s-office%d" $scenarioName $officeIdx }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $officeName }}-where-indexing
  labels:
     app: {{ $officeName }}-where-indexing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $officeName }}-where-indexing
  template:
    metadata:
      labels:
        app: {{ $officeName }}-where-indexing
    spec:
      enableServiceLinks: false
      containers:
        - name: {{ $officeName }}-where-indexing
          image: {{ $.Values.registryPrefix }}smtc_where_indexing:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OFFICE
              {{- $args := dict "scenarioName" $scenarioName "Values" $.Values "officeIdx" $officeIdx }}
              {{- include "smtc.env.office" $args }}
            - name: DBHOST
              {{- $args := dict "officeName" $officeName "Values" $.Values }}
              {{- include "smtc.env.dbhost" $args }}
            - name: SERVICE_INTERVAL
              value: "30"
            - name: UPDATE_INTERVAL
              value: "5"
            - name: SEARCH_BATCH
              value: "3000"
            - name: UPDATE_BATCH
              value: "500"
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
      {{ include "smtc.platform.node-selector" $ }}

---

{{- end }}
{{- end }}
