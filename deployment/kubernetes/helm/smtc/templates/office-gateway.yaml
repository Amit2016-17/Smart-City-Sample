
{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeName := printf "%s-office%d" $scenarioName (add $officeIdx 1) }}
{{- if contains $.Values.buildScope $officeName }}
{{- $officeIdx2 := add (mul $officeIdx (len $.Values.scenario)) $scenarioIdx }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $officeName }}-gateway-service
  labels:
    app: {{ $officeName }}-gateway
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: {{ $officeName }}-gateway

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $officeName }}-gateway
  labels:
     app: {{ $officeName }}-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $officeName }}-gateway
  template:
    metadata:
      labels:
        app: {{ $officeName }}-gateway
    spec:
      securityContext:
        fsGroup: {{ $.Values.groupId }}
      enableServiceLinks: false
      containers:
        - name: {{ $officeName }}-gateway
{{- if (len $.Values.connector.cloudHost) }}
          image: {{ $.Values.registryPrefix }}smtc_api_gateway_tunnelled:latest
{{- else }}
          image: {{ $.Values.registryPrefix }}smtc_api_gateway:latest
{{- end }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: OFFICE
              {{- $args := dict "scenarioName" $scenarioName "Values" $.Values "officeIdx" $officeIdx }}
              value: {{ include "smtc.env.office" $args | quote }}
            - name: DBHOST
              {{- $args := dict "officeName" $officeName "Values" $.Values }}
              value: {{ include "smtc.env.dbhost" $args | quote }}
            - name: STHOST
              value: "http://{{ $officeName }}-storage-service.default.svc.cluster.local:8080"
{{- if (len $.Values.connector.cloudHost) }}
            - name: REVERSE_TUNNEL1
              value: "{{ $.Values.connector.cloudHost }}:{{ add $.Values.connector.officeGatewayPort $officeIdx2 }} localhost:8080"
{{- end }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
{{- if (len $.Values.connector.cloudHost) }}
            - mountPath: /etc/hostkey
              name: hostkey
              readOnly: true
{{- end }}
      volumes:
        - name: timezone
          hostPath:
            path: /etc/localtime
            type: File
{{- if (len $.Values.connector.cloudHost) }}
        - name: hostkey
          secret:
            secretName: tunnel-secret
            defaultMode: 0440
{{- end }}
      {{ include "smtc.platform.node-selector" $ }}

{{- end }}
---

{{- end }}
{{- end }}
